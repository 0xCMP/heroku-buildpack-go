#!/bin/sh

##
# usage: bin/compile <build-dir> <cache-dir>

set -e

mkdir -p "$1" "$2"
build=$(cd "$1/" && pwd)
cache=$(cd "$2/" && pwd)

: ${GOVERSION:=release.r59}
# TODO: Check the version exists in src/go
echo "-----> Using Go version $GOVERSION"

GOROOT="$cache/src/go/$GOVERSION"
PATH="$GOROOT/bin:$PATH"
export GOROOT PATH

indent() {
  sed 's/^/       /'
}

if [ -f $GOROOT/src/all.bash ]
then
  echo "-----> Go version $GOVERSION cached; Skipping clone"
else
  echo "-----> Cloning Go version $GOVERSION"
  hg clone -r $GOVERSION http://go.googlecode.com/hg $GOROOT 2>&1 | indent
fi

if [ -f $GOROOT/bin/gofmt ]
then
  echo "-----> Go version $GOVERSION built; Skipping build"
else
  echo "-----> Building Go version $GOVERSION"
  (cd $GOROOT/src && ./all.bash > $cache/build.log 2>&1)
fi

if [ -f $build/all.sh ]
then
  echo "-----> Running all.sh"
  (
    # unset git dir or it will mess with goinstall
    unset GIT_DIR
    cd $build && ./all.sh
  ) | indent
else
  echo "-----> Running goinstall"
  (
    cd $build
    GOPATH="$PWD"
    export GOPATH

    for f in $(find src -type f | egrep "\.go$" | sort | uniq)
    do goinstall ./$(dirname $f)
    done
  )
fi
